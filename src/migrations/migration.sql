-- Active: 1737546015276@@127.0.0.1@5432@elearn
BEGIN;

CREATE TABLE IF NOT EXISTS users  (
  id SERIAL PRIMARY KEY NOT NULL,
  firstName VARCHAR(20) NOT NULL,
  lastName  VARCHAR(20) NOT NULL,
  password  TEXT NOT NULL,
  profileurl TEXT NOT NULL,
  email  VARCHAR(70) NOT NULL UNIQUE,
  type  VARCHAR(4) NOT NULL,
  status BOOLEAN DEFAULT TRUE,
  createdAt TIMESTAMP DEFAULT now(),
  updatedAt TIMESTAMP
);

CREATE TABLE IF NOT EXISTS feedback(
  id SERIAL PRIMARY KEY NOT NULL,
  stars INT NOT NULL,
  studentid SERIAL NOT NULL REFERENCES users(id) ON DELETE CASCADE,
  content TEXT NOT NULL,
  createdAt TIMESTAMP DEFAULT now(),
  updatedAt TIMESTAMP,
  status BOOLEAN DEFAULT FALSE
);

CREATE TABLE IF NOT EXISTS posts(
  id SERIAL PRIMARY KEY NOT NULL,
  likes INT NOT NULL,
  comment INT NOT NULL,
  title TEXT NOT NULL UNIQUE,
  description TEXT NOT NULL,
  bg TEXT NOT NULL,
  createdAt TIMESTAMP DEFAULT now(),
  updatedAt TIMESTAMP,
  status BOOLEAN DEFAULT TRUE
);

CREATE TABLE IF NOT EXISTS course(
  id SERIAL PRIMARY KEY NOT NULL,
  title VARCHAR(40) NOT NULL UNIQUE,
  description TEXT NOT NULL,
  cover TEXT,
  createdAt TIMESTAMP DEFAULT now(),
  updatedAt TIMESTAMP,
  totalModules INT,
  totalLessons INT,
  totalPrice INT,
  status BOOLEAN DEFAULT TRUE
);

CREATE TABLE IF NOT EXISTS modules(
  id SERIAL PRIMARY KEY NOT NULL,
  ordernum INT NOT NULL,
  courseid SERIAL NOT NULL REFERENCES course(id) ON DELETE CASCADE,
  title VARCHAR(40) NOT NULL UNIQUE,
  price INT NOT NULL,
  description TEXT NOT NULL,
  createdAt TIMESTAMP DEFAULT now(),
  updatedAt TIMESTAMP ,
  totalLessons INT,
  status BOOLEAN DEFAULT TRUE
);

CREATE TABLE IF NOT EXISTS lessons(
  id SERIAL PRIMARY KEY NOT NULL,
  moduleid SERIAL NOT NULL REFERENCES modules(id) ON DELETE CASCADE,
  title VARCHAR(40) NOT NULL,
  description TEXT NOT NULL,
  type VARCHAR(20),
  midiaURL TEXT ,
  createdAt TIMESTAMP DEFAULT now(),
  updatedAt TIMESTAMP,
  status BOOLEAN DEFAULT TRUE
);

CREATE TABLE IF NOT EXISTS proof(
  id SERIAL PRIMARY KEY NOT NULL,
  moduleid SERIAL NOT NULL REFERENCES modules(id) ON DELETE CASCADE,
  title VARCHAR(40) NOT NULL,
  description TEXT NOT NULL,
  createdAt TIMESTAMP DEFAULT now(),
  datestart TEXT NOT NULL,
  deteend TEXT NOT NULL,
  totalquiz INT ,
  status BOOLEAN DEFAULT TRUE
);

CREATE TABLE IF NOT EXISTS quiz(
  id SERIAL PRIMARY KEY NOT NULL,
  proofid SERIAL NOT NULL REFERENCES proof(id) ON DELETE CASCADE,
  question TEXT NOT NULL UNIQUE,
  answerindex INT NOT NULL,
  sugests TEXT[] NOT NULL,
  createdAt TIMESTAMP DEFAULT now(),
  updatedAt TIMESTAMP,
  status BOOLEAN DEFAULT TRUE
);

CREATE TABLE IF NOT EXISTS results(
  id SERIAL PRIMARY KEY NOT NULL,
  proofid SERIAL NOT NULL REFERENCES proof(id) ON DELETE CASCADE,
  studentid SERIAL NOT NULL REFERENCES users(id) ON DELETE CASCADE,
  moduleid SERIAL NOT NULL REFERENCES modules(id) ON DELETE CASCADE,
  status BOOLEAN DEFAULT FALSE,
  value INT NOT NULL 
);

CREATE TABLE IF NOT EXISTS cerificate(
  id SERIAL PRIMARY KEY NOT NULL,
  studentid SERIAL NOT NULL REFERENCES users(id) ON DELETE CASCADE,
  avarege INT NOT NULL ,
  doc TEXT NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS paymethod(
  id SERIAL PRIMARY KEY NOT NULL,
  title TEXT NOT NULL,
  url TEXT NOT NULL ,
  createdAt TIMESTAMP DEFAULT now(),
  updatedAt TIMESTAMP,
  status BOOLEAN DEFAULT TRUE
);

CREATE TABLE IF NOT EXISTS wallet(
  id SERIAL PRIMARY KEY NOT NULL,
  studentid SERIAL NOT NULL REFERENCES users(id) ON DELETE CASCADE,
  paymethodid SERIAL NOT NULL REFERENCES paymethod(id) ON DELETE CASCADE,
  cardnumber TEXT NOT NULL UNIQUE,
  createdAt TIMESTAMP DEFAULT now(),
  updatedAt TIMESTAMP,
  status BOOLEAN DEFAULT TRUE
);

CREATE TABLE IF NOT EXISTS payment(
  id SERIAL PRIMARY KEY NOT NULL,
  studentid SERIAL NOT NULL REFERENCES users(id) ON DELETE CASCADE,
  moduleid SERIAL NOT NULL REFERENCES modules(id) ON DELETE CASCADE,
  walletid SERIAL NOT NULL REFERENCES wallet(id) ON DELETE CASCADE,
  payed INT NOT NULL,
  status BOOLEAN DEFAULT TRUE,
  createdAt TIMESTAMP DEFAULT now(),
  updatedAt TIMESTAMP
);

COMMIT;